
services:
  admin_panel:
    build:
      context: ./admin_app
      dockerfile: Dockerfile
      target: prod
    container_name: sb_content_admin
    restart: always
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - media_data:/app/media  
      - static_data:/app/staticfiles 
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  parser:
    build:
      context: ./parser_app
      dockerfile: Dockerfile
      target: prod
    container_name: sb_web
    restart: always
    command: bash -c "python main.py"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres:17
    container_name: postgres_db_sb
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 3s
      retries: 5
      timeout: 5s
      start_interval: 2s
    volumes:
      - postgres_data:/var/lib/postgresql/data


  nginx:
    image: nginx:1.25
    container_name: nginx_sb
    restart: always
    depends_on:
      - admin_panel
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - static_data:/code/static:ro
      - media_data:/code/media:ro


volumes:
  postgres_data:
  media_data:
  static_data:
